"use client"
import { Popover, PopoverContent, PopoverTrigger } from "@/components/ui/popover"
import { Button } from "@/components/ui/button"
import { Smile } from "lucide-react"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { ScrollArea } from "@/components/ui/scroll-area"

const emojiCategories = {
  smileys: ["üòÄ", "üòÉ", "üòÑ", "üòÅ", "üòÜ", "üòÖ", "üòÇ", "ü§£", "üòä", "üòá", "üôÇ", "üôÉ", "üòâ", "üòå", "üòç", "ü•∞", "üòò"],
  gestures: ["üëã", "ü§ö", "üñêÔ∏è", "‚úã", "üññ", "üëå", "ü§å", "ü§è", "‚úåÔ∏è", "ü§û", "ü§ü", "ü§ò", "ü§ô", "üëà", "üëâ", "üëÜ", "üëá"],
  animals: ["üê∂", "üê±", "üê≠", "üêπ", "üê∞", "ü¶ä", "üêª", "üêº", "üê®", "üêØ", "ü¶Å", "üêÆ", "üê∑", "üê∏", "üêµ", "üêî", "üêß"],
  food: ["üçé", "üçê", "üçä", "üçã", "üçå", "üçâ", "üçá", "üçì", "ü´ê", "üçà", "üçí", "üçë", "ü•≠", "üçç", "ü••", "ü•ù", "üçÖ"],
  activities: ["‚öΩ", "üèÄ", "üèà", "‚öæ", "ü•é", "üéæ", "üèê", "üèâ", "ü•è", "üé±", "ü™Ä", "üèì", "ü•ä", "ü•ã", "üéΩ", "üõπ", "üõº"],
  travel: ["üöó", "üöï", "üöô", "üöå", "üöé", "üèéÔ∏è", "üöì", "üöë", "üöí", "üöê", "üõª", "üöö", "üöõ", "üöú", "üõµ", "üèçÔ∏è", "üõ∫"],
  objects: ["‚åö", "üì±", "üíª", "‚å®Ô∏è", "üñ•Ô∏è", "üñ®Ô∏è", "üñ±Ô∏è", "üñ≤Ô∏è", "üïπÔ∏è", "üóúÔ∏è", "üíΩ", "üíæ", "üíø", "üìÄ", "üìº", "üì∑", "üì∏"],
  symbols: ["‚ù§Ô∏è", "üß°", "üíõ", "üíö", "üíô", "üíú", "üñ§", "ü§ç", "ü§é", "üíî", "‚ù£Ô∏è", "üíï", "üíû", "üíì", "üíó", "üíñ", "üíò"],
}

export function EmojiPicker({onEmojiSelect}: {onEmojiSelect: (emoji: string) => void}) {
  return (
    <Popover>
      <PopoverTrigger asChild>
        <Button
          variant="ghost"
          size="icon"
          className="h-8 w-8 rounded-full flex-shrink-0 hover:bg-pink-500/10 hover:text-pink-500"
        >
          <Smile className="h-4 w-4" />
          <span className="sr-only">Emoji</span>
        </Button>
      </PopoverTrigger>
      <PopoverContent className="w-80 p-0 border-pink-500/20" align="start">
        <Tabs defaultValue="smileys" className="w-full">
          <div className="border-b border-pink-500/10 px-3">
            <TabsList className="h-12 bg-transparent">
              <TabsTrigger
                value="smileys"
                className="data-[state=active]:bg-transparent data-[state=active]:text-pink-500 data-[state=active]:shadow-none data-[state=active]:border-b-2 data-[state=active]:border-pink-500 rounded-none"
              >
                üòÄ
              </TabsTrigger>
              <TabsTrigger
                value="gestures"
                className="data-[state=active]:bg-transparent data-[state=active]:text-pink-500 data-[state=active]:shadow-none data-[state=active]:border-b-2 data-[state=active]:border-pink-500 rounded-none"
              >
                üëã
              </TabsTrigger>
              <TabsTrigger
                value="animals"
                className="data-[state=active]:bg-transparent data-[state=active]:text-pink-500 data-[state=active]:shadow-none data-[state=active]:border-b-2 data-[state=active]:border-pink-500 rounded-none"
              >
                üê∂
              </TabsTrigger>
              <TabsTrigger
                value="food"
                className="data-[state=active]:bg-transparent data-[state=active]:text-pink-500 data-[state=active]:shadow-none data-[state=active]:border-b-2 data-[state=active]:border-pink-500 rounded-none"
              >
                üçé
              </TabsTrigger>
              <TabsTrigger
                value="activities"
                className="data-[state=active]:bg-transparent data-[state=active]:text-pink-500 data-[state=active]:shadow-none data-[state=active]:border-b-2 data-[state=active]:border-pink-500 rounded-none"
              >
                ‚öΩ
              </TabsTrigger>
              <TabsTrigger
                value="travel"
                className="data-[state=active]:bg-transparent data-[state=active]:text-pink-500 data-[state=active]:shadow-none data-[state=active]:border-b-2 data-[state=active]:border-pink-500 rounded-none"
              >
                üöó
              </TabsTrigger>
              <TabsTrigger
                value="objects"
                className="data-[state=active]:bg-transparent data-[state=active]:text-pink-500 data-[state=active]:shadow-none data-[state=active]:border-b-2 data-[state=active]:border-pink-500 rounded-none"
              >
                üíª
              </TabsTrigger>
              <TabsTrigger
                value="symbols"
                className="data-[state=active]:bg-transparent data-[state=active]:text-pink-500 data-[state=active]:shadow-none data-[state=active]:border-b-2 data-[state=active]:border-pink-500 rounded-none"
              >
                ‚ù§Ô∏è
              </TabsTrigger>
            </TabsList>
          </div>
          {Object.entries(emojiCategories).map(([category, emojis]) => (
            <TabsContent key={category} value={category} className="p-0 m-0">
              <ScrollArea className="h-[200px]">
                <div className="grid grid-cols-8 gap-2 p-4">
                  {emojis.map((emoji) => (
                    <button
                      key={emoji}
                      className="h-8 w-8 flex items-center justify-center text-lg hover:bg-pink-500/10 rounded-md"
                      onClick={() => onEmojiSelect(emoji)}
                    >
                      {emoji}
                    </button>
                  ))}
                </div>
              </ScrollArea>
            </TabsContent>
          ))}
        </Tabs>
      </PopoverContent>
    </Popover>
  )
}
